# üìå Google Lighthouse API (–±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–∑–∂–µ)
import json
import os
import urllib.parse
import urllib.request
from typing import List, Optional

def run_lighthouse_api(
    url: str,
    strategy: str = "mobile",
    categories: Optional[List[str]] = None,
    api_key: Optional[str] = None,
    save_path: Optional[str] = None
) -> dict:
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ Google PageSpeed Insights API –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç JSON-—Ä–µ–∑—É–ª—å—Ç–∞—Ç.

    :param url: URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    :param strategy: –¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ("mobile" –∏–ª–∏ "desktop")
    :param categories: –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä: ["performance", "accessibility"])
    :param api_key: –ö–ª—é—á API Google (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    :param save_path: –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è JSON-–æ—Ç—á–µ—Ç–∞
    :return: dict ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ Lighthouse
    """

    base_url = "https://www.googleapis.com/pagespeedonline/v5/runPagespeed"
    params = {
        "url": url,
        "strategy": strategy
    }

    if categories:
        params["category"] = categories

    if api_key:
        params["key"] = api_key

    encoded_params = urllib.parse.urlencode(params, doseq=True)
    full_url = f"{base_url}?{encoded_params}"

    with urllib.request.urlopen(full_url) as response:
        result = json.loads(response.read().decode())

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–∞–π–ª (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å)
    if save_path:
        os.makedirs(os.path.dirname(save_path), exist_ok=True)
        with open(save_path, "w", encoding="utf-8") as f:
            json.dump(result, f, ensure_ascii=False, indent=2)

    return result